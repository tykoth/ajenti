// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Controls.codearea = (function(superClass) {
    extend(codearea, superClass);

    function codearea() {
      return codearea.__super__.constructor.apply(this, arguments);
    }

    codearea.prototype.createDom = function() {
      return "<div class=\"control control-inset codearea\"> \n</div>";
    };

    codearea.prototype.setupDom = function(dom) {
      var cm;
      codearea.__super__.setupDom.call(this, dom);
      this.cm = CodeMirror(this.dom, {
        value: this.properties.value,
        mode: this.properties.mode,
        lineNumbers: true,
        matchBrackets: true
      });
      $(this.dom).children().css({
        width: this._int_to_px(this.properties.width)
      });
      $(this.dom).find('.CodeMirror-scroll').css({
        height: this._int_to_px(this.properties.height)
      });
      cm = this.cm;
      jQuery(this.dom).find('.CodeMirror').resizable({
        resize: function() {
          cm.setSize($(this).width(), $(this).height());
          return cm.refresh();
        }
      });
      return setTimeout(this.cm.refresh, 1);
    };

    codearea.prototype.onBroadcast = function(msg) {
      if (msg === 'visible') {
        return setTimeout(this.cm.refresh, 1);
      }
    };

    codearea.prototype.detectUpdates = function() {
      var r, value;
      r = {};
      value = this.cm.getValue();
      if (value !== this.properties.value) {
        r.value = value;
      }
      return r;
    };

    return codearea;

  })(window.Control);

}).call(this);
