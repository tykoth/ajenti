// Generated by CoffeeScript 1.12.7
(function() {
  var AjentiNotification, Notificator,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  AjentiNotification = (function() {
    function AjentiNotification(type1, text1, timeout1, notificator, position) {
      this.type = type1;
      this.text = text1;
      this.timeout = timeout1;
      this.notificator = notificator;
      this.position = position;
      this.moveUp = bind(this.moveUp, this);
      this.remove = bind(this.remove, this);
      this.dom = jQuery("<div class=\"notification " + this.type + "\">\n    " + this.text + "\n</div>");
      this.active = true;
      this.position = 0;
      this.dom.css({
        top: this.position + 'px',
        left: '300px'
      });
      this.dom.animate({
        left: '0px'
      }, 500, 'swing');
      setTimeout(this.remove, this.timeout);
    }

    AjentiNotification.prototype.remove = function() {
      this.dom.animate({
        left: '300px'
      }, 500, 'swing');
      return setTimeout((function(_this) {
        return function() {
          _this.notificator.notifications.pop(_this);
          return _this.dom.remove();
        };
      })(this), 500);
    };

    AjentiNotification.prototype.moveUp = function(dy) {
      this.position -= dy;
      return this.dom.animate({
        top: this.position + 'px'
      }, 500, 'swing');
    };

    return AjentiNotification;

  })();

  Notificator = (function() {
    function Notificator() {
      this.notifications = [];
      this.browserNotifications = false;
      if (window.Notification) {
        if (Notification.permission === 'granted') {
          this.browserNotifications = 'html5';
        } else {
          if (Notification.permission !== 'denied') {
            Notification.requestPermission((function(_this) {
              return function(permission) {
                if (!Notification.permission) {
                  Notification.permission = permission;
                }
                if (permission === "granted") {
                  return _this.browserNotifications = 'html5';
                }
              };
            })(this));
          }
        }
      }
    }

    Notificator.prototype.notify = function(type, text, timeout) {
      var fn, i, len, notification, ref;
      if (this.browserNotifications === 'html5') {
        new Notification(text);
        return;
      }
      if (timeout == null) {
        timeout = 7000;
      }
      ref = this.notifications;
      fn = (function(_this) {
        return function(notification) {
          return notification.moveUp(-50);
        };
      })(this);
      for (i = 0, len = ref.length; i < len; i++) {
        notification = ref[i];
        fn(notification);
      }
      notification = new AjentiNotification(type, text, timeout, this, 0);
      this.notifications.push(notification);
      return jQuery('#notifications').append(notification.dom);
    };

    return Notificator;

  })();

  window.Notificator = new Notificator();

}).call(this);
